package by.tut.ssmt.controller.command.impl;import by.tut.ssmt.controller.command.Command;import by.tut.ssmt.controller.exception.ControllerException;import by.tut.ssmt.dao.DAO.DBConnector;import by.tut.ssmt.dao.DAO.ProductDaoImpl;import by.tut.ssmt.dao.exception.DaoException;import by.tut.ssmt.dao.repository.entities.Product;import by.tut.ssmt.service.Validator;import by.tut.ssmt.service.dataProcessors.AcidsProportionListImpl;import by.tut.ssmt.service.dataProcessors.DataProcessorList;import javax.servlet.ServletException;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.IOException;import java.util.ArrayList;import java.util.logging.Logger;public class DeleteCommand implements Command {    private ArrayList<Product> products;    final DataProcessorList dataProcessorList = new AcidsProportionListImpl();    final Validator validator = new Validator();    final DBConnector dbConnector = new DBConnector();    final ProductDaoImpl productDaoImpl = new ProductDaoImpl(dbConnector);    private static final Logger LOGGER = Logger.getLogger(DeleteCommand.class.getName());    @Override    public void execute(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException, ControllerException {        try {            productDaoImpl.delete(request.getParameter("productName"));//        productDaoImpl.delete(Integer.parseInt(request.getParameter("productId")));            assignAttribute(request);            collectProportionForContext(request);        } catch (DaoException e) {            throw new ControllerException(e);        }        System.out.println("RequestURL: " + request.getRequestURL());        LOGGER.info("RequestURL: " + request.getRequestURL());        request.getRequestDispatcher("index.jsp").forward(request, response);    }    private void assignAttribute(HttpServletRequest request) throws DaoException {        products = productDaoImpl.select();        validator.isNotNull(products);        request.setAttribute("productsAttribute", products);    }    private void collectProportionForContext(HttpServletRequest request) {        final String formattedProportion = dataProcessorList.calculate(products);        validator.isNotNull(formattedProportion);        request.setAttribute("proportion", formattedProportion);    }}