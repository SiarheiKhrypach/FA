package by.tut.ssmt.controller.command.impl;import by.tut.ssmt.controller.command.Command;import by.tut.ssmt.controller.exception.ControllerException;import by.tut.ssmt.dao.DAO.DBConnector;import by.tut.ssmt.dao.DAO.ProductDaoImpl;import by.tut.ssmt.dao.repository.entities.Product;import by.tut.ssmt.service.ProductService;import by.tut.ssmt.service.ServiceFactory;import by.tut.ssmt.service.Validator;import by.tut.ssmt.service.dataProcessors.DataProcessorList;import by.tut.ssmt.service.exceptions.ServiceException;import javax.servlet.ServletException;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.IOException;import java.util.ArrayList;import java.util.logging.Logger;public class DeleteCommand implements Command {    private ArrayList<Product> products;    private final ServiceFactory serviceFactory = ServiceFactory.getInstance();    private final ProductService productService = serviceFactory.getProductService();    private final Validator validator = serviceFactory.getValidator();    private final DataProcessorList dataProcessorList = serviceFactory.getDataProcessorList();//    final DataProcessorList dataProcessorList = new AcidsProportionListImpl();//    final Validator validator = new Validator();    final DBConnector dbConnector = new DBConnector();    final ProductDaoImpl productDaoImpl = new ProductDaoImpl(dbConnector);    private static final Logger LOGGER = Logger.getLogger(DeleteCommand.class.getName());    @Override    public void execute(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException, ControllerException {        try {            String product = request.getParameter("productName");            productService.deleteService(product);//            productDaoImpl.delete(request.getParameter("productName"));//        productDaoImpl.delete(Integer.parseInt(request.getParameter("productId")));//            assignAttributes(request);//            assignAttribute(request);//            collectProportionForContext(request);            System.out.println("RequestURL: " + request.getRequestURL());            LOGGER.info("RequestURL: " + request.getRequestURL());//            response.sendRedirect(request.getContextPath() + "/");            response.sendRedirect("/main");        } catch (ServiceException e) {            throw new ControllerException(e);        }//        request.getRequestDispatcher("index.jsp").forward(request, response);    }//    private void assignAttributes(HttpServletRequest request) {//        HttpSession session = request.getSession();//        products = productDaoImpl.select();//        validator.isNotNull(products);////        collectProductData(session);//        session.setAttribute("productsAttribute", products);//        setProportion(session);//    }//    private void setProportion(HttpSession session) {////        products = (ArrayList<Product>) productService.selectAllService();//        final String formattedProportion = dataProcessorList.calculate(products);//        validator.isNotNull(formattedProportion);//        session.setAttribute("proportion", formattedProportion);//    }//    private void assignAttribute(HttpServletRequest request) throws DaoException {//        products = productDaoImpl.select();//        validator.isNotNull(products);//        request.setAttribute("productsAttribute", products);//    }////    private void collectProportionForContext(HttpServletRequest request) {//        final String formattedProportion = dataProcessorList.calculate(products);//        validator.isNotNull(formattedProportion);//        request.setAttribute("proportion", formattedProportion);//    }}